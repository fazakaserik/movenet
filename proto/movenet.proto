syntax = "proto3";

import "google/protobuf/empty.proto";

package movenet;

message JointStateRequest {
}

message HeaderMessage {
  // Nested message for the ROS2 Time format
  message TimeMessage {
    int32 sec = 1;       // Seconds part of the time
    uint32 nanosec = 2;  // Nanoseconds part of the time
  }

  TimeMessage stamp = 1;      // Timestamp for the header
  string frame_id = 2; // Frame identifier
}

message JointStateMessage {
  HeaderMessage header = 1;                // Header containing timestamp and frame_id
  repeated string name = 2;         // Names of the joints
  repeated double position = 3;     // Positions of each joint (rad or m)
  repeated double velocity = 4;     // Velocities of each joint (rad/s or m/s)
  repeated double effort = 5;       // Efforts in each joint (Nm or N)
}

service MovenetService {
  // A server-to-client streaming RPC to stream JointStates
  rpc StreamJointStates(google.protobuf.Empty) returns (stream JointStateMessage);

  // Simulation controls
  rpc Plan(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc Execute(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc Stop(google.protobuf.Empty) returns (google.protobuf.Empty);
}