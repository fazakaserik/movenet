# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import movenet_pb2 as movenet__pb2


class MovenetServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StreamJointStates = channel.stream_stream(
                '/movenet.MovenetService/StreamJointStates',
                request_serializer=movenet__pb2.JointStateRequest.SerializeToString,
                response_deserializer=movenet__pb2.JointStateMessage.FromString,
                )


class MovenetServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StreamJointStates(self, request_iterator, context):
        """A server-to-client streaming RPC to stream JointStates
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MovenetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StreamJointStates': grpc.stream_stream_rpc_method_handler(
                    servicer.StreamJointStates,
                    request_deserializer=movenet__pb2.JointStateRequest.FromString,
                    response_serializer=movenet__pb2.JointStateMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'movenet.MovenetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MovenetService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StreamJointStates(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/movenet.MovenetService/StreamJointStates',
            movenet__pb2.JointStateRequest.SerializeToString,
            movenet__pb2.JointStateMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
